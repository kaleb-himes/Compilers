MP_PROGRAM     1   1   program
MP_IDENTIFIER  1   9   Tester
MP_SCOLON      1   15   ;
MP_VAR         3   2   var
MP_IDENTIFIER  3   6   I
MP_COLON       3   7   :
MP_INTEGER     3   9   Integer
MP_SCOLON      3   16   ;
MP_BEGIN       5   3   begin
MP_COMMENT     5   9   {tester}
MP_WRITELN     6   5   Writeln
MP_SCOLON      6   12   ;
MP_WRITELN     6   14   Writeln
MP_SCOLON      6   21   ;
MP_WRITE       7   5   Write
MP_LPAREN      7   10   (
MP_STRING_LIT  7   11   Please enter an integer value for I: 
MP_RPAREN      7   48   )
MP_SCOLON      7   49   ;
MP_READ        8   5   Read
MP_LPAREN      8   9   (
MP_IDENTIFIER  8   10   I
MP_RPAREN      8   11   )
MP_SCOLON      8   12   ;
MP_IDENTIFIER  9   5   I
MP_ASSIGN      9   7   :=
MP_IDENTIFIER  9   11   I
MP_PLUS        9   13   +
MP_INTEGER_LIT 9   15   1
MP_SCOLON      9   16   ;
MP_WRITELN     10   5   Writeln
MP_LPAREN      10   12   (
MP_STRING_LIT  10   13   The current value of I is 
MP_COMMA       10   39   ,
MP_IDENTIFIER  10   41   I
MP_COLON       10   42   :
MP_INTEGER_LIT 10   43   0
MP_RPAREN      10   44   )
MP_SCOLON      10   45   ;
MP_WRITELN     11   5   Writeln
MP_SCOLON      11   12   ;
MP_WRITELN     11   14   Writeln
MP_IDENTIFIER  12   3   end
MP_PERIOD      12   6   .
MP_COMMENT     12   8   {tester}
MP_EOF         13   1   -1
