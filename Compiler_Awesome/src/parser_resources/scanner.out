MP_PROGRAM     1   1   program
MP_IDENTIFIER  1   9   Tester
MP_SCOLON      1   15   ;
MP_VAR         3   2   var
MP_IDENTIFIER  3   6   I
MP_COLON       3   7   :
MP_INTEGER     3   9   Integer
MP_SCOLON      3   16   ;
MP_COMMENT     5   1   {procedure this (VAR example:integer x)}
MP_BEGIN       6   3   begin
MP_COMMENT     6   9   {tester}
MP_WRITELN     7   5   Writeln
MP_LPAREN      7   12   (
MP_RPAREN      7   13   )
MP_SCOLON      7   14   ;
MP_WRITELN     8   5   Writeln
MP_LPAREN      8   12   (
MP_RPAREN      8   13   )
MP_SCOLON      8   14   ;
MP_WRITE       9   5   Write
MP_LPAREN      9   10   (
MP_STRING_LIT  9   11   Please enter an integer value for I: 
MP_RPAREN      9   48   )
MP_SCOLON      9   49   ;
MP_READ        10   5   Read
MP_LPAREN      10   9   (
MP_IDENTIFIER  10   10   I
MP_RPAREN      10   11   )
MP_SCOLON      10   12   ;
MP_IDENTIFIER  11   5   I
MP_ASSIGN      11   7   :=
MP_IDENTIFIER  11   11   I
MP_PLUS        11   13   +
MP_INTEGER_LIT 11   15   1
MP_SCOLON      11   16   ;
MP_WRITELN     12   5   Writeln
MP_LPAREN      12   12   (
MP_STRING_LIT  12   13   The current value of I is 
MP_COMMA       12   39   ,
MP_IDENTIFIER  12   41   I
MP_COLON       12   42   :
MP_INTEGER_LIT 12   43   0
MP_RPAREN      12   44   )
MP_SCOLON      12   45   ;
MP_WRITELN     13   5   Writeln
MP_LPAREN      13   12   (
MP_RPAREN      13   13   )
MP_SCOLON      13   14   ;
MP_WRITELN     13   16   Writeln
MP_LPAREN      13   23   (
MP_RPAREN      13   24   )
MP_SCOLON      13   25   ;
MP_IDENTIFIER  14   3   end
MP_PERIOD      14   6   .
MP_COMMENT     14   8   {tester}
MP_EOF         15   1   -1
